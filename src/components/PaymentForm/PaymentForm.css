/* /Users/shin-junwoo/슈퍼코딩/코드 설명/250808/src/components/PaymentForm/PaymentForm.css */

/* 🚨 참고: 이 파일은 NewPayment.css와 내용이 겹치는 것으로 보입니다. 
   프로젝트에서는 하나의 파일로 통합하여 관리하는 것이 좋습니다. 
   여기서는 PaymentForm.css를 기준으로 설명합니다. */

/* 'new-payment__controls' 클래스를 가진 요소(입력 필드 그룹)에 대한 스타일입니다. */
.new-payment__controls {
  /* 자식 요소(입력 필드)들을 가로로 배치하기 위해 flexbox를 사용합니다. */
  display: flex;
  /* 컨테이너 너비가 부족할 경우 자식 요소들이 다음 줄로 넘어가도록 설정합니다. (반응형) */
  flex-wrap: wrap;
  /* 자식 요소들 사이의 간격을 가로, 세로 모두 1rem으로 설정합니다. */
  gap: 1rem;
  /* 요소 아래쪽에 1rem의 바깥 여백을 주어 'actions' 부분과 간격을 둡니다. */
  margin-bottom: 1rem;
  /* 내부 텍스트를 왼쪽 정렬합니다. (부모의 text-align: center를 덮어쓰기 위함) */
  text-align: left;
}

/* 'new-payment__control' 내부의 <label> 태그에 대한 스타일입니다. */
.new-payment__control label {
  /* 글자를 굵게 만듭니다. */
  font-weight: bold;
  /* 레이블 아래에 0.5rem의 바깥 여백을 주어 입력 필드와 간격을 둡니다. */
  margin-bottom: 0.5rem;
  /* 레이블이 한 줄을 모두 차지하도록 블록 레벨 요소로 만듭니다. */
  display: block;
}

/* 'new-payment__control' 내부의 <input> 태그에 대한 스타일입니다. */
.new-payment__control input {
  /* 폰트 관련 속성을 부모 요소로부터 상속받아 일관성을 유지합니다. */
  font: inherit;
  /* 안쪽 여백을 0.5rem 줍니다. */
  padding: 0.5rem;
  /* 모서리를 6px만큼 둥글게 만듭니다. */
  border-radius: 6px;
  /* 1px 두께의 회색 실선 테두리를 설정합니다. */
  border: 1px solid #ccc;
  /* 입력 필드의 너비를 20rem으로 고정합니다. */
  width: 20rem;
  /* 입력 필드의 최대 너비를 100%로 제한하여, 부모 컨테이너보다 커지지 않도록 합니다. (반응형) */
  max-width: 100%;
}

/* 'new-payment__actions' 클래스를 가진 요소(버튼 그룹)에 대한 스타일입니다. */
.new-payment__actions {
  /* 내부 요소(버튼)를 오른쪽으로 정렬합니다. */
  text-align: right;
}
